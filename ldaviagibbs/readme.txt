1 Download

Download Code: Code
Download sample model: Sample

2 Compile

Source code contains two program: lda and topword. lda program do parameter estimation & inference, and topword program outputs the top words of each topic.
1). Compile lda: 
$> make clean
$> make
2). Compile topword:
$> make topword

3 Parameter estimation

Command : $> ./lda |topic num| |sample num| |data| |model name|
topic num: the number of topics
sample num: after gibbs sampling burn in period, we sample |sample num| times and calculate their average value.
data: path of the data
model name: model's name. output file will be named by |model_name|.|type|
Note that alpha and beta are set as 50/K and 0.1 as default.
e.g. $> ./lda 100 50 ap.data ap

4 Top Words of Each Topic

$> ./topword |phi_file| |vocab_file||out_file|
phi_file: phi file generated by lda program
vocab_file: vocabulary list of the training corpus
out_file: output file name

5 Input Data Formation

Input data of this program is the same as blei's C code of LDA Here
|M| |term_1|:|count| |term_2|:|count| ... |term_N|:|count|
|M| is the number of unique terms in the document
|count| associated with each term is how many times that term appeared in the document. 
Note that |term_1| is an integer which indexes the term; it is not a string.

6 Output Data

Output files contain:
|model_name|.theta : estimation for document-topic parameter
|model_name|.phi : estimation for topic-word parameter
|model_name|.tassgin : topic assigned to each word
|model_name|.other : alpha,beta,topic sum,sample sum

7 Case Study

To apply LDA on trn.dat in model.zip:

7.1 Compile LDA

$> make clean
$> make
$> make toword
Run LDA

$> ./lda 100 50 trn.data trn

7.2 Time Consuming, a Comparative Perspectives

My computer:
openSUSE 11 
GCC 4.2
Intel Core Duo CPU T2450
2GB RAM
ldaviagibbs program: 1000 iterations of burn in period cost 26 minutes and the following 50 sampling cost 14 minutes. memory consuming: 16.8MB
Blei's C code: 48 iterations to converge, cost 1h22min, memory consuming: 20.5MB
GibbsLDA++: 1000 iterations cost 23min. memory consuming: 17.8MB

7.3 Top Words of Each Topic

$> topword trn.phi vocab.txt topword
